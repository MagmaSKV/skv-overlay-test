name: Sync External Ebuilds

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  sync-ebuilds:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout overlay repo
        uses: actions/checkout@v3
        with:
          path: overlay

      - name: Install git
        run: sudo apt-get update && sudo apt-get install -y git

      - name: Read package list and sync
        run: |
          PACKAGE_LIST=".github/external-ebuild/external-packages.txt"
          EXCEPTIONS_FILE=".github/external-ebuild/exceptions.txt"
          declare -a EXCEPTIONS
          
          # Leer excepciones
          declare -a EXCEPTIONS
          if [ -f "$EXCEPTIONS_FILE" ]; then
            mapfile -t EXCEPTIONS < "$EXCEPTIONS_FILE"
          fi
          
          while IFS="|" read -r REPO PKG_PATH MIN_VERSION; do
            echo "Syncing $PKG_PATH from $REPO newer than $MIN_VERSION..."
            
            TMP_DIR=$(mktemp -d)
            git clone --depth 1 "$REPO" "$TMP_DIR"
            
            SRC_DIR="$TMP_DIR/$PKG_PATH"
            DST_DIR="overlay/$PKG_PATH"
            mkdir -p "$DST_DIR"
            
            # Copiar ebuilds
            for ebuild in "$SRC_DIR"/*.ebuild; do
              base=$(basename "$ebuild")
              version=$(echo "$base" | sed -E "s/.*-([0-9.]+)\.ebuild/\1/")
              
              if [ "$(printf '%s\n%s\n' "$MIN_VERSION" "$version" | sort -V | tail -n1)" != "$MIN_VERSION" ]; then
                # Verificar si es excepción
                SKIP=0
                for ex in "${EXCEPTIONS[@]}"; do
                  if [[ "$DST_DIR/$base" == "overlay/$ex" ]]; then
                    SKIP=1
                    break
                  fi
                done
                if [ $SKIP -eq 0 ]; then
                  cp -u "$ebuild" "$DST_DIR/"
                fi
              fi
            done
            
            # Copiar archivos de directorios como files, patches, etc
            for subdir in files patches; do
              if [ -d "$SRC_DIR/$subdir" ]; then
                mkdir -p "$DST_DIR/$subdir"
                for f in "$SRC_DIR/$subdir/"*; do
                  fname=$(basename "$f")
                  # Verificar excepción
                  SKIP=0
                  for ex in "${EXCEPTIONS[@]}"; do
                    if [[ "$DST_DIR/$subdir/$fname" == "overlay/$ex" ]]; then
                      SKIP=1
                      break
                    fi
                  done
                  if [ $SKIP -eq 0 ]; then
                    cp -u "$f" "$DST_DIR/$subdir/"
                  fi
                done
              fi
            done
            
            rm -rf "$TMP_DIR"
          done < "$PACKAGE_LIST"

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd overlay
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git diff-index --quiet HEAD || git commit -m "Sync external ebuilds"
          git push origin HEAD:${{ github.ref_name }}